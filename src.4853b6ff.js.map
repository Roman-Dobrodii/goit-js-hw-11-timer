{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","renderCountdownTimer","refs","$days","document","querySelector","$hours","$mins","$secs","setInterval","currentTime","Date","now","deltaTime","updateTimerFace","getTimeComponents","days","hours","mins","secs","innerHTML","value","String","padStart","time","pad","Math","floor","timer"],"mappings":";AAuDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAvDMA,IAAAA,EAAAA,WACoC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC7BD,KAAAA,SAAWA,EACbC,KAAAA,WAAaA,EACbC,KAAAA,uBAEAC,KAAAA,KAAO,CACZC,MAAOC,SAASC,cAAiBN,GAAAA,OAAAA,EADrB,yBAEZO,OAAQF,SAASC,cAAiBN,GAAAA,OAAAA,EAFtB,0BAGZQ,MAAOH,SAASC,cAAiBN,GAAAA,OAAAA,EAHrB,yBAIZS,MAAOJ,SAASC,cAAiBN,GAAAA,OAAAA,EAA1B,0BA6Cb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,uBAzC2B,MAAA,WAAA,IAAA,EAAA,KACvBU,YAAY,WACFC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKb,WAAaU,EACpC,EAAKI,gBAAgB,EAAKC,kBAAkBF,KAC7C,OAoCP,CAAA,IAAA,kBAjCiD,MAAA,SAAA,GAA3BG,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC9BjB,KAAAA,KAAKC,MAAMiB,UAAYJ,EACvBd,KAAAA,KAAKI,OAAOc,UAAYH,EACxBf,KAAAA,KAAKK,MAAMa,UAAYF,EACvBhB,KAAAA,KAAKM,MAAMY,UAAYD,IA6BlC,CAAA,IAAA,MA1BQE,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAyBvC,CAAA,IAAA,oBAtBsBC,MAAAA,SAAAA,GAMX,MAAA,CAAER,KALM,KAAKS,IAAIC,KAAKC,MAAMH,EAAQ,QAK5BP,MAJC,KAAKQ,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAIhDN,KAHP,KAAKO,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAGpCL,KAFb,KAAKM,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,WAkB9D,EAvDM1B,GA2CA8B,EAAQ,IAAI9B,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAIW,KAAK","file":"src.4853b6ff.js","sourceRoot":"..\\src","sourcesContent":["class CountdownTimer {\r\n    constructor({ selector, targetDate }) {\r\n        this.selector = selector;\r\n      this.targetDate = targetDate;\r\n      this.renderCountdownTimer();\r\n\r\n      this.refs = {\r\n      $days: document.querySelector(`${selector} [data-value=\"days\"]`),\r\n      $hours: document.querySelector(`${selector} [data-value=\"hours\"]`),\r\n      $mins: document.querySelector(`${selector} [data-value=\"mins\"]`),\r\n      $secs: document.querySelector(`${selector} [data-value=\"secs\"]`),\r\n      };\r\n    }\r\n\r\n    renderCountdownTimer() {\r\n    setInterval(() => {\r\n        const currentTime = Date.now();\r\n        const deltaTime = this.targetDate - currentTime;\r\n        this.updateTimerFace(this.getTimeComponents(deltaTime));\r\n    }, 1000);\r\n    }\r\n\r\n    updateTimerFace({ days, hours, mins, secs }) {\r\n      this.refs.$days.innerHTML = days;\r\n      this.refs.$hours.innerHTML = hours;\r\n      this.refs.$mins.innerHTML = mins;\r\n      this.refs.$secs.innerHTML = secs;\r\n  }\r\n\r\n    pad(value) {\r\n      return String(value).padStart(2, '0');\r\n  }\r\n\r\n    getTimeComponents(time) {\r\n      const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n      const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n      const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n      const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n}\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Nov 11, 2020'),\r\n});\r\n\r\n// timer.renderCountdownTimer();\r\n\r\n// function pad(value) {\r\n//   return String(value).padStart(2, '0');\r\n// }\r\n\r\n// Замечание:\r\n// Перепишите таймер так, чтобы вся логика была инкапсулирована в классе."]}